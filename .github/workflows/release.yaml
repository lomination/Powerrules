name: Create release

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Version to release (example: 1.0.2)"
        required: true
        type: string

jobs:

  build:
    name: Build and test
    uses: ./.github/workflows/build.yaml

  check-format:
    name: Check format
    uses: ./.github/workflows/check-format.yaml
  
  coverage:
    name: Coverage
    needs: build
    uses: ./.github/workflows/coverage.yaml

  check-examples:
    name: Check examples
    needs: build
    uses: ./.github/workflows/check-examples.yaml

  create-release:
    name: Create release
    runs-on: ubuntu-latest
    needs:
      - build
      - check-format
      - coverage
      - check-examples
    permissions:
      pages: write
      contents: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup git user
        shell: bash
        run: |
          git config user.name 'github-actions[bot]'
          git config user.email 'github-actions[bot]@users.noreply.github.com'
      - name: Set version to the new one (${{ inputs.version }})
        shell: bash
        run: |
          sed -i 's/^\( *version *:=\).*/\1 "${{ inputs.version }}",/g' build.sbt
          sed -i 's/^\( *"version":\).*/\1 "${{ inputs.version }}",/g' package.json
          # sed -i 's|^!\[Version.*|![Version ${{ inputs.version }}](https://img.shields.io/badge/version-${{ inputs.version }}-blue)|g' README.md
          git commit -am "Set version to ${{ inputs.version }}"
          git tag -a ${{ inputs.version }} -m "Release v${{ inputs.version }}"
      - name: Setup scala
        uses: coursier/setup-action@v1
        with:
          jvm: temurin:1.21
          apps: sbt
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
      - name: Install Node.js packages
        shell: bash
        run: npm ci
      - name: Build for ScalaJS
        shell: bash
        run: npm run build4gh
      - name: Upload Artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: "./dist"
      - name: Setup Pages
        uses: actions/configure-pages@v3
      - name: Deploy to GitHub pages
        id: deployment
        uses: actions/deploy-pages@v4
      - name: Get next snapshot version
        id: next-version
        shell: bash
        run: |
          v="$( awk -F. '{ print $1"."$2"."($3 + 1) }' <<< "${{ inputs.version }}" )"
          echo "New snapshot: $v"
          echo "next-version=$v" >> $GITHUB_OUTPUT
      - name: Set version to the new snapshot
        shell: bash
        run: |
          sed -i 's/^\( *version *:=\).*/\1 "${{ steps.next-version.outputs.next-version }}-SNAPSHOT",/g' build.sbt
          sed -i 's/^\( *"version":\).*/\1 "${{ steps.next-version.outputs.next-version }}-SNAPSHOT",/g' package.json
          git commit -am "Set version to ${{ steps.next-version.outputs.next-version }}-SNAPSHOT"
      - name: Push changes
        shell: bash
        run: git push && git push --tags
      - name: Update version badge gist
        shell: bash
        run: |
          gh auth login --with-token <<< "${{ secrets.GIST_TOKEN }}"
          echo '{ "schemaVersion": 1, "label": "version", "message": "'"${{ inputs.version }}"'", "color": "blue" }' > powerrules-version-badge.json
          gh gist edit 332a8f012e03423e217c300418f37718 powerrules-version-badge.json
